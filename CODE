import operator

features = (0.18, 1.0, 0.92, 0.07, 0.85, 0.99, 0.87)
Num_of_house = (0.89, 0.26, 0.11, 0.37, 0.16, 0.41, 0.47)
price = (109.85, 155.72, 137.66, 76.17, 139.75, 162.6, 151.77)
predict_features = (0.49, 0.57, 0.56, 0.76)
predict_Num_of_house = (0.18, 0.83, 0.64, 0.18)

sum_features = sum(features)
sum_Num_of_house = sum(Num_of_house)
sum_price = sum(price)

mean_features = sum(features) / len(features)
mean_Num_of_house = sum(Num_of_house) / len(Num_of_house)
mean_price = sum(price) / len(price)

features_mean = list(map(lambda x: x - mean_features, features))
Num_of_house_mean = list(map(lambda x: x - mean_Num_of_house, Num_of_house))
price_mean = list(map(lambda x: x - mean_price, price))

square_features = sum(list(map(operator.mul, features_mean, features_mean)))
square_Num_of_house = sum(list(map(operator.mul, features_Num_of_house, features_Num_of_house)))

features_mean_price_mean = sum(list(map(operator.mul, features_mean, price_mean)))
Num_of_house_mean_price_mean = sum(list(map(operator.mul, Num_of_house_mean, price_mean)))
features_mean_Num_of_house_mean = sum(list(map(operator.mul, features_mean, Num_of_house_mean)))

b1 = ((features_mean_price_mean)*(square_Num_of_house) - (features_mean_Num_of_house_mean)*(Num_of_house_mean_price_mean))/((square_features)*(square_Num_of_house) - (features_mean_Num_of_house_mean)*(features_mean_Num_of_house_mean))
b2 = ((Num_of_house_mean_price_mean)*(square_features)-(features_mean_Num_of_house_mean)*(features_mean_price_mean))/((square_features)*(square_Num_of_house) - (features_mean_Num_of_house_mean)*(features_mean_Num_of_house_mean))

a = mean_price - b1*mean_features - b2*mean_Num_of_house

b1_predict_Num_of_house = list(map(lambda x: x * b1, predict_features))
b2_predict_Num_of_house = list(map(lambda x: x * b2, predict_Num_of_house))

b1_b2 = list(map(operator.add, b1_predict_Num_of_house, b2_predict_Num_of_house))

y = list(map(lambda x: x + a, b1_b2))
